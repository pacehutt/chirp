import { SignIn, SignInButton, SignOutButton, SignUp, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";
import type {RouterOutputs} from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime)

const CreatePostWizard =()=>{
    const {user} = useUser();

    console.log(user)

    if(!user) return null;

    return <div className="flex gap-4 w-full">
      <Image src={user.profileImageUrl} alt="Profile Img" className="w-14 h-14 rounded-full" width={56} height={56}/>
      <input type="text" placeholder="Type some emojis.." className="bg-transparent p-2 grow outline-none" />
    </div>
}


type PostWithUSer = RouterOutputs["posts"]["getAll"][number]
const PostView = ({post, author}: PostWithUSer)=>{

  return (<div key={post.id} className="p-5 border-b border-slate-400 flex gap-4">
    <Image height={32} width={32} src={author.profileImageUrl} alt="profile image" className="w-8 h-8 rounded-full" />

    <div className="flex flex-col gap-1">
      <span className="font-bold-500 text-slate-500">@{author.username}  Â· {dayjs(post.createdAt).fromNow()} </span>
    <span>
      {post.content}
      </span>
    </div>
  </div>)

}















const Home: NextPage = () => {

  const {data, isLoading}= api.posts.getAll.useQuery()
  const user = useUser();

  if(isLoading) return <div>Loading...</div>
   
  if(!data)
  return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen ">

        <div className="w-full md:max-w-2xl h-full border-x border-slate-500">

        
       

        <div className="p-5 border-b border-slate-400" style={{
          color:"white"
        }}> 
        
        {user.isSignedIn && <CreatePostWizard/>}
        {!user.isSignedIn && <SignInButton/>}
        {!!user.isSignedIn && <SignOutButton/>}
        <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
 
        </div>

      <div className="flex flex-col">

        {data?.map((fullPost) => <PostView {...fullPost} key={fullPost.post.id}/>)}
        
      </div>


        </div>
      </main>
    </>
  );
};

export default Home;
